{"version":3,"sources":["Components/navigation.component.tsx","Components/signup.component.tsx","Components/login.component.tsx","Components/profile.component.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Navigation","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","submitbtn","textDecoration","Signup","useState","email","setEmail","password","setPassword","name","setName","error","setError","history","useHistory","emailErr","setEmailErr","passwordErr","setPasswordErr","nameErr","submithandler","e","a","preventDefault","mailformat","match","length","payload","axios","post","response","Cookie","set","JSON","stringify","push","data","msg","Container","fixed","maxWidth","style","height","width","paddingTop","paddingLeft","Alert","severity","component","marginTop","padding","onSubmit","fontSize","TextField","label","required","onChange","target","value","helperText","onBlur","type","Button","size","Input","fullWidth","disableUnderline","marginLeft","to","Login","React","showPassword","values","setValues","passwordError","setpasswordError","open","setOpen","useEffect","checkUser","getJSON","console","log","Collapse","in","action","onClick","marginBottom","FormControl","InputLabel","htmlFor","OutlinedInput","id","pass","endAdornment","InputAdornment","onMouseDown","event","labelWidth","justifyContent","margin","media","Profile","user","setUser","verifyUser","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","remove","App","createMuiTheme","palette","primary","main","secondary","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0747c29a.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function Navigation() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            ManufacAnalytics\n          </Typography>\n         \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { useState,useEffect } from \"react\";\nimport Cookie from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport TextField from  \"@material-ui/core/TextField\";\nimport Typography from  \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from  \"@material-ui/core/Container\";\nimport Input from '@material-ui/core/Input';\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n\nconst useStyles =makeStyles({\n  submitbtn: {\n   textDecoration:\"none\",\n   color:\"white\"\n  },\n });\n\ninterface State {\n  password: string;\n\n  showPassword: boolean;\n}\n// interface for type checking\n\nconst  Signup:React.FC = () =>{\n\n    const classes = useStyles();\n    const [email,setEmail] = useState<string>(\"\")\n    const [password,setPassword] = useState<string>(\"\")\n    const [name,setName] = useState<string>(\"\")\n    const [error,setError]=useState<string>(\"\")\n    const history =useHistory()\n    const [emailErr,setEmailErr] = useState<boolean>(false)\n    const [passwordErr,setPasswordErr]= useState<boolean>(false)\n    const [nameErr,setNameErr] = useState<boolean>(false)\n\n\n\n// function called on form submit\n    const submithandler = async (e:any)=>{\n\n      e.preventDefault()\n// checking mail format\n      const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if(email.match(mailformat) && password.length>=6)\n      {\n      try {\n\n      const payload={\n        \"email\":email,\n        \"name\":name,\n        \"password\":password\n      }\n            const response=await axios.post(\"/register\",\n            payload)\n\n      // storing data in backend\n        Cookie.set(\"userInfo\",JSON.stringify(response))\n      // setting cookie after data is store in db\n        history.push(\"/profile\")\n      //redirecting user to profile \n\n          } catch (err) {\n            setError(err.response.data.msg)\n\n        // checking custom errors\n    }}\n    else{\n\n      (password.length<6)?setPasswordErr(true):setEmailErr(true)\n    }\n\n\n\n    }\n\n\n// validating email before being submitted \n    const validateEmail= (e: React.FocusEvent<HTMLInputElement>) =>{\n\n      const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if(email.match(mailformat)){\n        setEmailErr(false)\n\n      }\n      else{\n        setEmailErr(true)\n      }\n    }\n   \n// checking length of password in submithandler function\n// so here we are checking length to remove error if\n// password is of length 6 or more\n    const checklength =() =>{\n      if(password.length>5){\n        setPasswordErr(false)\n      }\n    }\n\n    \n\n    return (\n    <>\n\n      <Container fixed maxWidth=\"xs\">\n        \n      <Typography style={{ height:\"20px\",width:\"350px\" ,paddingTop:\"10px\",paddingLeft:\"5%\"}}>\n   {error!==\"\"?<Alert severity=\"error\" >{error}</Alert>:<div></div>} </Typography>    <Typography component=\"div\" style={{ marginTop:\"50px\",height: '60%' ,padding:16}} >\n      <form className=\"App\" onSubmit={submithandler}>\n        \n       {/* setting all errors state onChange event */}\n      <Typography variant=\"h6\">\n            <AccountCircle fontSize=\"large\"/>\n          </Typography>\n          <TextField\n          variant =\"outlined\"\n          color=\"primary\"\n          label=\"Name\"\n          error={nameErr}\n          required\n          style={{height:80,width:300}}\n          onChange={(e)=>{setName(e.target.value);}}\n          />\n\n    <TextField\n          variant =\"outlined\"\n          color=\"primary\"\n          label=\"Email\"\n          required\n          helperText={emailErr===false? \"\":\"Incorrect email.\"}\n          \n        \n          error={emailErr}\n          style={{height:80,width:300}}\n          onChange={(e)=>setEmail(e.target.value)}\n          onBlur={validateEmail}\n          />  \n            \n            <TextField\n          variant =\"outlined\"\n          color=\"primary\"\n          label=\"Password\"\n          type=\"password\"\n          helperText={passwordErr===false? \"\":\"Enter a password with min of 6 letters.\"}\n          error={passwordErr}\n          \n          style={{height:80,width:300}}\n          onChange={(e)=>{setPassword(e.target.value);checklength()}}\n          \n          \n          />  \n          \n            \n          \n          <Button variant=\"contained\" color=\"primary\" size=\"large\" style={{width:\"300px\"}} >\n    <Input type=\"submit\" value=\"SIGN UP\" name=\"Submit\" fullWidth className={classes.submitbtn}disableUnderline={true}/>\n      </Button>\n    \n      \n      \n      \n      </form>\n      \n      \n      <Typography style={{marginLeft:\"20%\",marginTop:\"15px\"}}>\n      \n      <Link to=\"/signin\">Have an account?Sign In</Link>\n      </Typography>\n      </Typography> \n      </Container>\n    </>\n    );\n    }\n\n    export default Signup;\n","import React,{useState,useEffect} from \"react\";\nimport Cookie from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { ButtonGroup } from \"@material-ui/core\";\nimport TextField from  \"@material-ui/core/TextField\";\nimport Typography from  \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from  \"@material-ui/core/Container\";\nimport Input from '@material-ui/core/Input';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton'\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Alert } from '@material-ui/lab';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\n\n\n\nimport {  Theme, createStyles } from '@material-ui/core/styles';\n\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close'\n\n\n\n\n\n// styling material ui elements\nconst useStyles =makeStyles({\n submitbtn: {\n  textDecoration:\"none\",\n  color:\"white\",\n  width:\"300\"\n },\n});\n\n\n\n\n\ninterface State {\n  showPassword: boolean;\n}\n\n// Interface to accept only a particular type\n\n\nconst  Login:React.FC = () =>{\n\nconst classes= useStyles();\n  const [values, setValues] = React.useState<State>({\n    showPassword: false,\n  });\n\n  const [email,setEmail] = useState<string>(\"\")\n  const [emailErr,setEmailErr] = useState<boolean>(false)\n  const [password,setPassword] = useState<string>(\"\")\n  const [error,setError]=useState<string>(\"\")\n\n  const [passwordError,setpasswordError]=useState<boolean>(false)\n  const history =useHistory()\n  const [open, setOpen] = React.useState(true);\n\n  // all useState hooks decleration\n\n\n  useEffect(()=>{\n    checkUser();\n   \n   },[])\n   \n// checking if the user is already logged in \n//  if he or she is then they are redirected to profile page \n   \n   const checkUser= ()=>{\n   \n     if(Cookie.getJSON(\"userInfo\")){\n       history.push(\"/profile\")\n     }\n   \n   }\n// user is stored in cookie\n  \n  \n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  // function for showing password\n\n  const onChangeHandler =(pass:any)=>{\n    \n    setPassword(pass)\n    \n    if(password.length===0 ){\n      setpasswordError(true)\n    }\n\n    else{\n      setpasswordError(false)\n    }\n\n\n  }\n\n\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n// checking if email is according to the format if not custom error message \n// is sent to the user\n\n  const validateEmail= (e: React.FocusEvent<HTMLInputElement>) =>{\n\n    const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      \n      if(email.match(mailformat)) {\n          setEmailErr(false)\n        }\n\n      else{\n          setEmailErr(true)\n   }\n  }\n\n  // Submit handler checks email  and password since it can be directly \n  // be submitted ignoring the message sent using validate Email function\n  const submithandler = async (e:any)=>{\n    \n      e.preventDefault()\n      const mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if(email.match(mailformat) && password !==null)\n      {\n   console.log(\"hello\")\n  //  if form is properly filled req to backend is made\n        try {\n                const response=await axios.post(\"/login\",\n                {email,password})\n\n      //  Setting cookie on valid response\n                Cookie.set(\"userInfo\",JSON.stringify(response))\n      // redirecting user to profile\n                history.push(\"/profile\")\n\n              } catch (err) {\n      //If something goes wrong error is shown to user \n                setError(err.response.data.msg)\n                setOpen(true)\n        }\n\n        }\n        else{\n        setEmailErr(true);\n\n\n        }\n\n    }\n// form designed using material ui\n  return (\n  <>\n  \n    <Container fixed maxWidth=\"xs\">\n      \n       <Typography component=\"div\" style={{ marginTop:\"10%\",height: '65%' ,padding:15}} >\n       <Typography style={{ height:\"20px\",width:\"300px\" , marginLeft:\"10%\"}}>\n   {error!==\"\"?\n  //  \n   \n(<div >\n   <Collapse in={open}>\n   <Alert severity=\"error\"\n       action={\n         <IconButton\n           aria-label=\"close\"\n           color=\"inherit\"\n           size=\"small\"\n           onClick={() => {\n             setOpen(false);\n           }}\n         >\n           <CloseIcon fontSize=\"inherit\" />\n         </IconButton>\n       }\n     >{error}\n     </Alert>\n   </Collapse>\n   \n </div>)\n   \n   \n   \n   \n   :<div></div>} </Typography>\n       <form onSubmit={submithandler} className=\"App\">\n      \n      {/* Email Field */}\n        \n          <AccountCircle style={{ fontSize: 40 }} />\n       \n        <TextField\n        variant =\"outlined\"\n        style={{height:80,width:300,marginBottom:\"5px\"}}\n        color=\"primary\"\n        label=\"Email\"\n        helperText={emailErr===false? \"\":\"Incorrect email.\"}\n       \n      \n        error={emailErr}\n        onBlur={validateEmail}\n  \n        onChange={(e)=>{setEmail(e.target.value)}}\n\n      \n        />\n\n{/* Setting errror and validation using error prop and helper text */}\n{/* setting state on onChange event */}\n         \n         <FormControl  variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={values.showPassword ? 'text' : 'password'}\n            style={{width:300,marginBottom:\"5px\"}}\n            value={password}\n            error={passwordError}\n            required\n            \n            onChange={(e)=>onChangeHandler(e.target.value)}\n           \n\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={70}\n          />\n        </FormControl>  \n        {/* Password field  */}\n        \n        {/*Submit button  */}\n    <Button variant=\"contained\" color=\"primary\" size=\"large\" style={{width:\"300px\",marginTop:\"15px\",marginBottom:\"10px\"}} >\n        <Input type=\"submit\"value=\"SIGN IN\" name=\"Submit\" fullWidth className={classes.submitbtn}disableUnderline={true}/>\n    </Button>\n \n    \n  \n  \n        \n    <Link to=\"/signup\">Don't have an account?Sign Up</Link>\n    </form>\n\n    {/*  link to signup page */}\n    </Typography> \n   \n    </Container>\n  </>\n  );\n}\n\nexport default Login;\n","import React,{useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    justifyContent: \"center\",\n    margin:\"8px\"\n    \n  },\n  media: {\n    height: 300,\n  },\n});\n\n\n\n const Profile:React.FC = () => {\n  const classes = useStyles();\n  const history =useHistory()\n  const [user,setUser]= React.useState<boolean>(false)\n\n// Checking if user visited this page without logging in\n  useEffect(()=>{\n    verifyUser()\n  },[])\n\n\n  // Deleting cookie on logout\n  const Logout = () =>{\n    console.log(\"hello\")\n    // Cookie.set(\"userInfo\",null)\n    Cookie.remove(\"userInfo\")\n    history.push(\"/\")\n   \n\n}\n\n\nconst verifyUser= ()=>{\n   \n  if(!Cookie.getJSON(\"userInfo\")){\n    history.push(\"/\")\n  }\n  else{\n  setUser(true)\n  }\n\n}\n\n// If user is authenticated then the profile is rendered\n// else empty div are send and user is redirected to login page \n  return (\n    <>\n    {user===true?(\n      <div className=\"profile-container\">\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://thegadgetflow.com/wp-content/uploads/2018/08/Incredible-desk-setup-02-821x1024.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent >\n            \n          <Typography gutterBottom variant=\"h5\" component=\"h4\">\n            Manufac Analytics\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Manufac Analytics is a technology firm focussed on providing reliable and easy to use Artificial Intelligence \n          and IoT solutions to the manufacturing plants worldwide to help them become operationally \n          efficient.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions  classes={{root: classes.root}}>\n        <div className=\"logout-btn\">\n      <Button variant=\"outlined\" color=\"primary\"   onClick={Logout}>\n  LOG OUT\n</Button>\n</div>\n      </CardActions>\n    </Card>\n    </div>):<div></div>}\n    </>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport './App.css';\nimport Navigation from \"../src/Components/navigation.component\";\nimport Signup from \"../src/Components/signup.component\";\nimport Login from \"../src/Components/login.component\";\nimport Profile from \"../src/Components/profile.component\";\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n// Routing all the components \n\nconst  App:React.FC = () =>{\n  const theme = createMuiTheme({\n    palette: {\n      primary:{\n        main: '#00796b'\n      },\n      secondary: {\n        main: '#E33E7F'\n      }\n    }\n  });\n\n \n  return (\n  <Router>\n    <MuiThemeProvider theme={theme}>\n      \n  <div>\n  <Navigation/>\n  {/* Navigation always loads as it is outside the switch */}\n  <Switch>\n   <Route path=\"/signup\" exact><Signup/> </Route>\n   <Route path=\"/signin\" exact><Login/> </Route>\n   <Route path=\"/profile\" exact><Profile/> </Route>\n   <Route path=\"/\" exact><Login/> </Route>\n    \n</Switch>\n\n  </div>\n  </MuiThemeProvider>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}